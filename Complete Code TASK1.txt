Complete Code
Hereâ€™s the complete code for the Fake News Detection model:


import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
import nltk
from nltk.corpus import stopwords
import re
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, accuracy_score
import joblib

# Download stopwords
nltk.download('stopwords')

# Load dataset
data = pd.read_csv('data.csv')

# Preprocessing function
def preprocess_text(text):
    text = text.lower()  # Lowercase
    text = re.sub(r'\d+', '', text)  # Remove digits
    text = re.sub(r'\W+', ' ', text)  # Remove special characters
    tokens = text.split()
    tokens = [word for word in tokens if word not in stopwords.words('english')]  # Remove stopwords
    return ' '.join(tokens)

# Applying the preprocessing
data['cleaned_text'] = data['text'].apply(preprocess_text)

# Encode labels
data['label'] = data['label'].map({'real': 0, 'fake': 1})

# Split the dataset
X_train, X_test, y_train, y_test = train_test_split(data['cleaned_text'], data['label'], test_size=0.2, random_state=42)

# Initialize TF-IDF Vectorizer
vectorizer = TfidfVectorizer()
X_train_tfidf = vectorizer.fit_transform(X_train)
X_test_tfidf = vectorizer.transform(X_test)

# Initialize the model
model = LogisticRegression()

# Train the model
model.fit(X_train_tfidf, y_train)

# Predict on test data
y_pred = model.predict(X_test_tfidf)

# Model evaluation
print("Accuracy:", accuracy_score(y_test, y_pred))
print(classification_report(y_test, y_pred))

# Save the model
joblib.dump(model, 'fake_news_model.pkl')
joblib.dump(vectorizer, 'vectorizer.pkl')

def predict_news(text):
    loaded_model = joblib.load('fake_news_model.pkl')
    loaded_vectorizer = joblib.load('vectorizer.pkl')
    
    cleaned_text = preprocess_text(text)
    text_tfidf = loaded_vectorizer.transform([cleaned_text])
    
    prediction = loaded_model.predict(text_tfidf)
    return "Fake News" if prediction[0] == 1 else "Real News"

# Example prediction
print(predict_news("A new species of animal has been discovered!"))